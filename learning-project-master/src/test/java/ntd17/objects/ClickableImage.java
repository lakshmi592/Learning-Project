package ntd17.objects;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

public class ClickableImage {
    //the URL that opens when the image is clicked
    private String imageHref;
    //width of displayed image
    private String imageWidth;
    //height of displayed image
    private String imageHeight;
    //location from where the image is loaded
    private String imageSource;

    //constructor for the EXPECTED content; autogenerated
    public ClickableImage(String imageHref, String imageWidth, String imageHeight, String imageSource) {
        this.imageHref = imageHref;
        this.imageWidth = imageWidth;
        this.imageHeight = imageHeight;
        this.imageSource = imageSource;
    }

    //constructor for ACTUAL content
    public ClickableImage(WebElement element) {
        //the 'element' parameter represents the 'a' tag from the HTML
        this.imageHref = element.getAttribute("href");
        //extracting the width, height and src attributes will be done
        //from the 'img' tag that is a descendant of the 'element' parameter
        this.imageWidth = element.findElement(By.cssSelector("img")).getAttribute("width");
        this.imageHeight = element.findElement(By.cssSelector("img")).getAttribute("height");
        this.imageSource = element.findElement(By.cssSelector("img")).getAttribute("src");
    }
    //autogenerated method
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ClickableImage that = (ClickableImage) o;

        if (imageHref != null ? !imageHref.equals(that.imageHref) : that.imageHref != null) return false;
        if (imageWidth != null ? !imageWidth.equals(that.imageWidth) : that.imageWidth != null) return false;
        if (imageHeight != null ? !imageHeight.equals(that.imageHeight) : that.imageHeight != null) return false;
        return imageSource != null ? imageSource.equals(that.imageSource) : that.imageSource == null;
    }

    //autogenerated method
    @Override
    public int hashCode() {
        int result = imageHref != null ? imageHref.hashCode() : 0;
        result = 31 * result + (imageWidth != null ? imageWidth.hashCode() : 0);
        result = 31 * result + (imageHeight != null ? imageHeight.hashCode() : 0);
        result = 31 * result + (imageSource != null ? imageSource.hashCode() : 0);
        return result;
    }

    //autogenerated method
    @Override
    public String toString() {
        return "ClickableImage{" +
                "imageHref='" + imageHref + '\'' +
                ", imageWidth='" + imageWidth + '\'' +
                ", imageHeight='" + imageHeight + '\'' +
                ", imageSource='" + imageSource + '\'' +
                '}';
    }
}
